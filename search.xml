<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[liferay_searching]]></title>
      <url>%2F2017%2F03%2F01%2Fliferay-searching%2F</url>
      <content type="text"><![CDATA[Searching in Liferay 6.2标签（liferay,search）： liferay,searchliferay search 底层是基于lucene进行关键字搜索,在企业开发我们都会选择solr集成。通常客户在查询content时，不需要显示出过多的content（因为默认的分词是或者的关系）,这个时候我们一般需要更精确的搜所：AND "kaleo workflow"```123456789101112131415这样我们就会查询既包含liferay的关键字也包含kaleo workflow的关键字的content。```python BooleanQuery keyWordsQuery = BooleanQueryFactoryUtil.create(searchContext); keyWords=escapeQueryCharsAnd(keyWords); String[] keyarr=keyWords.split(&quot; &quot;); StringBuilder sb = new StringBuilder(); int i=0; for(String keyword:keyarr)&#123; keyword=&quot;\&quot;&quot;+keyword+&quot;\&quot;&quot;; sb.append(keyword); if(i&lt;keyarr.length-1)&#123; sb.append(&quot; AND &quot;); &#125; i++; &#125;这个escapeQueryCharsAnd方法的实现：123456789101112131415public String escapeQueryChars(String s) &#123; StringBuilder sb = new StringBuilder(); for (int i = 0; i &lt; s.length(); i++) &#123; char c = s.charAt(i); // These characters are part of the query syntax and must be escaped if (c == '\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')' || c == ':'|| c == '^' || c == '[' || c == ']' || c == '\"' || c == '&#123;' || c == '&#125;' || c == '~'|| c == '*' || c == '?' || c == '|' || c == '&amp;' || c == ';' || c == '/'|| Character.isWhitespace(c)) &#123; sb.append('\\'); &#125; sb.append(c); &#125; return sb.toString(); &#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hello]]></title>
      <url>%2F2017%2F03%2F01%2Fhello%2F</url>
      <content type="text"></content>
    </entry>

    
  
  
</search>
