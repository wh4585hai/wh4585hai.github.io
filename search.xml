<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[liferay_searching]]></title>
      <url>%2F2017%2F03%2F01%2Fliferay-searching%2F</url>
      <content type="text"><![CDATA[Searching in Liferay 6.2标签（liferay,search）： liferay,searchliferay search 底层是基于lucene进行关键字搜索,在企业开发我们都会选择solr集成。通常客户在查询content时，不需要显示出过多的content（因为默认的分词是或者的关系）,这个时候我们一般需要更精确的搜所：&quot;liferay&quot; AND &quot;kaleo workflow&quot;这样我们就会查询既包含liferay的关键字也包含kaleo workflow的关键字的content。BooleanQuery keyWordsQuery = BooleanQueryFactoryUtil.create(searchContext); keyWords=escapeQueryCharsAnd(keyWords); String[] keyarr=keyWords.split(&quot; &quot;); StringBuilder sb = new StringBuilder(); int i=0; for(String keyword:keyarr){ keyword=&quot;\&quot;&quot;+keyword+&quot;\&quot;&quot;; sb.append(keyword); if(i&lt;keyarr.length-1){ sb.append(&quot; AND &quot;); } i++; } public String escapeQueryCharsAnd(String s) { StringBuilder sb = new StringBuilder(); for (int i = 0; i &lt; s.length(); i++) { char c = s.charAt(i); // These characters are part of the query syntax and must be escaped if (c == &#39;\\&#39; || c == &#39;+&#39; || c == &#39;-&#39; || c == &#39;!&#39; || c == &#39;(&#39; || c == &#39;)&#39; || c == &#39;:&#39; || c == &#39;^&#39; || c == &#39;[&#39; || c == &#39;]&#39; || c == &#39;\&quot;&#39; || c == &#39;{&#39; || c == &#39;}&#39; || c == &#39;~&#39; || c == &#39;*&#39; || c == &#39;?&#39; || c == &#39;|&#39; || c == &#39;&amp;&#39; || c == &#39;;&#39; || c == &#39;/&#39; || Character.isWhitespace(c)) { sb.append(&#39; &#39;); }else{ sb.append(c); } } return sb.toString(); }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hello]]></title>
      <url>%2F2017%2F03%2F01%2Fhello%2F</url>
      <content type="text"></content>
    </entry>

    
  
  
</search>
